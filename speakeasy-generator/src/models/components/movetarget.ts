/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Description, Description$ } from "./description";
import { z } from "zod";

/**
 * Targets moves can be directed at during battle. Targets can be Pok√©mon, adjacent positions, all opponents, etc.
 */
export type MoveTarget = {
    /**
     * The identifier for this move target resource
     */
    id: number;
    /**
     * The name for this move target resource
     */
    name: string;
    /**
     * The description of this move target listed in different languages
     */
    descriptions: Array<Description>;
};

/** @internal */
export namespace MoveTarget$ {
    export type Inbound = {
        id: number;
        name: string;
        descriptions: Array<Description$.Inbound>;
    };

    export const inboundSchema: z.ZodType<MoveTarget, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int(),
            name: z.string(),
            descriptions: z.array(Description$.inboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                descriptions: v.descriptions,
            };
        });

    export type Outbound = {
        id: number;
        name: string;
        descriptions: Array<Description$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MoveTarget> = z
        .object({
            id: z.number().int(),
            name: z.string(),
            descriptions: z.array(Description$.outboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                descriptions: v.descriptions,
            };
        });
}
