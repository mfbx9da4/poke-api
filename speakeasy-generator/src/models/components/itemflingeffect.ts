/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Item, Item$ } from "./item";
import { VerboseEffect, VerboseEffect$ } from "./verboseeffect";
import { z } from "zod";

export type ItemFlingEffect = {
    id?: number | undefined;
    name?: string | undefined;
    effectEntries?: Array<VerboseEffect> | undefined;
    items?: Array<Item> | undefined;
};

/** @internal */
export namespace ItemFlingEffect$ {
    export type Inbound = {
        id?: number | undefined;
        name?: string | undefined;
        effect_entries?: Array<VerboseEffect$.Inbound> | undefined;
        items?: Array<Item$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<ItemFlingEffect, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            effect_entries: z.array(VerboseEffect$.inboundSchema).optional(),
            items: z.array(Item$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.effect_entries === undefined ? null : { effectEntries: v.effect_entries }),
                ...(v.items === undefined ? null : { items: v.items }),
            };
        });

    export type Outbound = {
        id?: number | undefined;
        name?: string | undefined;
        effect_entries?: Array<VerboseEffect$.Outbound> | undefined;
        items?: Array<Item$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ItemFlingEffect> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            effectEntries: z.array(VerboseEffect$.outboundSchema).optional(),
            items: z.array(Item$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.effectEntries === undefined ? null : { effect_entries: v.effectEntries }),
                ...(v.items === undefined ? null : { items: v.items }),
            };
        });
}
