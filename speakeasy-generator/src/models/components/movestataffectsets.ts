/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { MoveStatAffect, MoveStatAffect$ } from "./movestataffect";
import { z } from "zod";

export type MoveStatAffectSets = {
    increase: Array<MoveStatAffect>;
    decrease: Array<MoveStatAffect>;
};

/** @internal */
export namespace MoveStatAffectSets$ {
    export type Inbound = {
        increase: Array<MoveStatAffect$.Inbound>;
        decrease: Array<MoveStatAffect$.Inbound>;
    };

    export const inboundSchema: z.ZodType<MoveStatAffectSets, z.ZodTypeDef, Inbound> = z
        .object({
            increase: z.array(MoveStatAffect$.inboundSchema),
            decrease: z.array(MoveStatAffect$.inboundSchema),
        })
        .transform((v) => {
            return {
                increase: v.increase,
                decrease: v.decrease,
            };
        });

    export type Outbound = {
        increase: Array<MoveStatAffect$.Outbound>;
        decrease: Array<MoveStatAffect$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MoveStatAffectSets> = z
        .object({
            increase: z.array(MoveStatAffect$.outboundSchema),
            decrease: z.array(MoveStatAffect$.outboundSchema),
        })
        .transform((v) => {
            return {
                increase: v.increase,
                decrease: v.decrease,
            };
        });
}
