/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NamedAPIResource, NamedAPIResource$ } from "./namedapiresource";
import { z } from "zod";

export type MoveBattleStylePreference = {
    /**
     * Chance of using the move, in percent, if HP is under one half of maximum HP.
     */
    lowHpPreference: number;
    /**
     * Chance of using the move, in percent, if HP is over one half of maximum HP.
     */
    highHpPreference: number;
    moveBattleStyle: NamedAPIResource;
};

/** @internal */
export namespace MoveBattleStylePreference$ {
    export type Inbound = {
        low_hp_preference: number;
        high_hp_preference: number;
        move_battle_style: NamedAPIResource$.Inbound;
    };

    export const inboundSchema: z.ZodType<MoveBattleStylePreference, z.ZodTypeDef, Inbound> = z
        .object({
            low_hp_preference: z.number().int(),
            high_hp_preference: z.number().int(),
            move_battle_style: NamedAPIResource$.inboundSchema,
        })
        .transform((v) => {
            return {
                lowHpPreference: v.low_hp_preference,
                highHpPreference: v.high_hp_preference,
                moveBattleStyle: v.move_battle_style,
            };
        });

    export type Outbound = {
        low_hp_preference: number;
        high_hp_preference: number;
        move_battle_style: NamedAPIResource$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MoveBattleStylePreference> = z
        .object({
            lowHpPreference: z.number().int(),
            highHpPreference: z.number().int(),
            moveBattleStyle: NamedAPIResource$.outboundSchema,
        })
        .transform((v) => {
            return {
                low_hp_preference: v.lowHpPreference,
                high_hp_preference: v.highHpPreference,
                move_battle_style: v.moveBattleStyle,
            };
        });
}
