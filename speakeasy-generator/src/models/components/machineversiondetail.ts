/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { APIResource, APIResource$ } from "./apiresource";
import { z } from "zod";

export type MachineVersionDetail = {
    machine: APIResource;
    versionGroup: APIResource;
};

/** @internal */
export namespace MachineVersionDetail$ {
    export type Inbound = {
        machine: APIResource$.Inbound;
        version_group: APIResource$.Inbound;
    };

    export const inboundSchema: z.ZodType<MachineVersionDetail, z.ZodTypeDef, Inbound> = z
        .object({
            machine: APIResource$.inboundSchema,
            version_group: APIResource$.inboundSchema,
        })
        .transform((v) => {
            return {
                machine: v.machine,
                versionGroup: v.version_group,
            };
        });

    export type Outbound = {
        machine: APIResource$.Outbound;
        version_group: APIResource$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MachineVersionDetail> = z
        .object({
            machine: APIResource$.outboundSchema,
            versionGroup: APIResource$.outboundSchema,
        })
        .transform((v) => {
            return {
                machine: v.machine,
                version_group: v.versionGroup,
            };
        });
}
