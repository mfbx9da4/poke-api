/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PokeathlonStatAffect, PokeathlonStatAffect$ } from "./pokeathlonstataffect";
import { z } from "zod";

export type NaturePokeathlonStatAffectSets = {
    increase: Array<PokeathlonStatAffect>;
    decrease: Array<PokeathlonStatAffect>;
};

/** @internal */
export namespace NaturePokeathlonStatAffectSets$ {
    export type Inbound = {
        increase: Array<PokeathlonStatAffect$.Inbound>;
        decrease: Array<PokeathlonStatAffect$.Inbound>;
    };

    export const inboundSchema: z.ZodType<NaturePokeathlonStatAffectSets, z.ZodTypeDef, Inbound> = z
        .object({
            increase: z.array(PokeathlonStatAffect$.inboundSchema),
            decrease: z.array(PokeathlonStatAffect$.inboundSchema),
        })
        .transform((v) => {
            return {
                increase: v.increase,
                decrease: v.decrease,
            };
        });

    export type Outbound = {
        increase: Array<PokeathlonStatAffect$.Outbound>;
        decrease: Array<PokeathlonStatAffect$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NaturePokeathlonStatAffectSets> =
        z
            .object({
                increase: z.array(PokeathlonStatAffect$.outboundSchema),
                decrease: z.array(PokeathlonStatAffect$.outboundSchema),
            })
            .transform((v) => {
                return {
                    increase: v.increase,
                    decrease: v.decrease,
                };
            });
}
