/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { MoveStatAffectSets, MoveStatAffectSets$ } from "./movestataffectsets";
import { NatureStatAffectSets, NatureStatAffectSets$ } from "./naturestataffectsets";
import { z } from "zod";

export type Stat = {
    id: number;
    name: string;
    gameIndex: number;
    isBattleOnly?: boolean | undefined;
    affectingMoves?: MoveStatAffectSets | undefined;
    affectingNatures?: NatureStatAffectSets | undefined;
};

/** @internal */
export namespace Stat$ {
    export type Inbound = {
        id: number;
        name: string;
        game_index: number;
        is_battle_only?: boolean | undefined;
        affecting_moves?: MoveStatAffectSets$.Inbound | undefined;
        affecting_natures?: NatureStatAffectSets$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<Stat, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int(),
            name: z.string(),
            game_index: z.number().int(),
            is_battle_only: z.boolean().optional(),
            affecting_moves: MoveStatAffectSets$.inboundSchema.optional(),
            affecting_natures: NatureStatAffectSets$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                gameIndex: v.game_index,
                ...(v.is_battle_only === undefined ? null : { isBattleOnly: v.is_battle_only }),
                ...(v.affecting_moves === undefined ? null : { affectingMoves: v.affecting_moves }),
                ...(v.affecting_natures === undefined
                    ? null
                    : { affectingNatures: v.affecting_natures }),
            };
        });

    export type Outbound = {
        id: number;
        name: string;
        game_index: number;
        is_battle_only?: boolean | undefined;
        affecting_moves?: MoveStatAffectSets$.Outbound | undefined;
        affecting_natures?: NatureStatAffectSets$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Stat> = z
        .object({
            id: z.number().int(),
            name: z.string(),
            gameIndex: z.number().int(),
            isBattleOnly: z.boolean().optional(),
            affectingMoves: MoveStatAffectSets$.outboundSchema.optional(),
            affectingNatures: NatureStatAffectSets$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                game_index: v.gameIndex,
                ...(v.isBattleOnly === undefined ? null : { is_battle_only: v.isBattleOnly }),
                ...(v.affectingMoves === undefined ? null : { affecting_moves: v.affectingMoves }),
                ...(v.affectingNatures === undefined
                    ? null
                    : { affecting_natures: v.affectingNatures }),
            };
        });
}
