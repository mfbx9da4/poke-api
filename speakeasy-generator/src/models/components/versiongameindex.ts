/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NamedAPIResource, NamedAPIResource$ } from "./namedapiresource";
import { z } from "zod";

export type VersionGameIndex = {
    /**
     * The internal id of the game used in generation VI and VII to identify different
     *
     * @remarks
     * versions of the same Pok√©mon species.
     *
     */
    gameIndex?: number | undefined;
    version?: NamedAPIResource | undefined;
};

/** @internal */
export namespace VersionGameIndex$ {
    export type Inbound = {
        game_index?: number | undefined;
        version?: NamedAPIResource$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<VersionGameIndex, z.ZodTypeDef, Inbound> = z
        .object({
            game_index: z.number().int().optional(),
            version: NamedAPIResource$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.game_index === undefined ? null : { gameIndex: v.game_index }),
                ...(v.version === undefined ? null : { version: v.version }),
            };
        });

    export type Outbound = {
        game_index?: number | undefined;
        version?: NamedAPIResource$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VersionGameIndex> = z
        .object({
            gameIndex: z.number().int().optional(),
            version: NamedAPIResource$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.gameIndex === undefined ? null : { game_index: v.gameIndex }),
                ...(v.version === undefined ? null : { version: v.version }),
            };
        });
}
