/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Nature, Nature$ } from "./nature";
import { z } from "zod";

export type PokeathlonStatAffect = {
    /**
     * The maximum amount of change to the referenced Pok√©athlon stat.
     */
    maxChange: number;
    nature: Nature;
};

/** @internal */
export namespace PokeathlonStatAffect$ {
    export type Inbound = {
        max_change: number;
        nature: Nature$.Inbound;
    };

    export const inboundSchema: z.ZodType<PokeathlonStatAffect, z.ZodTypeDef, Inbound> = z
        .object({
            max_change: z.number().int(),
            nature: Nature$.inboundSchema,
        })
        .transform((v) => {
            return {
                maxChange: v.max_change,
                nature: v.nature,
            };
        });

    export type Outbound = {
        max_change: number;
        nature: Nature$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PokeathlonStatAffect> = z
        .object({
            maxChange: z.number().int(),
            nature: Nature$.outboundSchema,
        })
        .transform((v) => {
            return {
                max_change: v.maxChange,
                nature: v.nature,
            };
        });
}
