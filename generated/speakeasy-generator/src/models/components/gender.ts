/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type PokemonSpeciesDetails = {
    /**
     * The chance of this Pok√©mon being female, in eighths; or -1 for genderless
     */
    rate?: number | undefined;
};

export type Gender = {
    /**
     * The identifier for this gender resource
     */
    id?: number | undefined;
    /**
     * The name for this gender resource
     */
    name?: string | undefined;
    pokemonSpeciesDetails?: Array<PokemonSpeciesDetails> | undefined;
};

/** @internal */
export namespace PokemonSpeciesDetails$ {
    export type Inbound = {
        rate?: number | undefined;
    };

    export const inboundSchema: z.ZodType<PokemonSpeciesDetails, z.ZodTypeDef, Inbound> = z
        .object({
            rate: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.rate === undefined ? null : { rate: v.rate }),
            };
        });

    export type Outbound = {
        rate?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PokemonSpeciesDetails> = z
        .object({
            rate: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.rate === undefined ? null : { rate: v.rate }),
            };
        });
}

/** @internal */
export namespace Gender$ {
    export type Inbound = {
        id?: number | undefined;
        name?: string | undefined;
        pokemon_species_details?: Array<PokemonSpeciesDetails$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<Gender, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            pokemon_species_details: z
                .array(z.lazy(() => PokemonSpeciesDetails$.inboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.pokemon_species_details === undefined
                    ? null
                    : { pokemonSpeciesDetails: v.pokemon_species_details }),
            };
        });

    export type Outbound = {
        id?: number | undefined;
        name?: string | undefined;
        pokemon_species_details?: Array<PokemonSpeciesDetails$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Gender> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            pokemonSpeciesDetails: z
                .array(z.lazy(() => PokemonSpeciesDetails$.outboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.pokemonSpeciesDetails === undefined
                    ? null
                    : { pokemon_species_details: v.pokemonSpeciesDetails }),
            };
        });
}
