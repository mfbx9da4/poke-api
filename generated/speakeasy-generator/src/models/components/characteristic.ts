/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type Characteristic = {
    /**
     * The identifier for this characteristic resource
     */
    id: number;
    /**
     * The remainder of the highest stat/IV divided by 5
     */
    geneModulo: number;
    /**
     * The possible values of the highest stat that would result in a Pok√©mon recieving this characteristic when divided by 5
     */
    possibleValues: Array<number>;
};

/** @internal */
export namespace Characteristic$ {
    export type Inbound = {
        id: number;
        gene_modulo: number;
        possible_values: Array<number>;
    };

    export const inboundSchema: z.ZodType<Characteristic, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int(),
            gene_modulo: z.number().int(),
            possible_values: z.array(z.number().int()),
        })
        .transform((v) => {
            return {
                id: v.id,
                geneModulo: v.gene_modulo,
                possibleValues: v.possible_values,
            };
        });

    export type Outbound = {
        id: number;
        gene_modulo: number;
        possible_values: Array<number>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Characteristic> = z
        .object({
            id: z.number().int(),
            geneModulo: z.number().int(),
            possibleValues: z.array(z.number().int()),
        })
        .transform((v) => {
            return {
                id: v.id,
                gene_modulo: v.geneModulo,
                possible_values: v.possibleValues,
            };
        });
}
