/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Description, Description$ } from "./description";
import { EggGroup, EggGroup$ } from "./egggroup";
import { EvolutionChain, EvolutionChain$ } from "./evolutionchain";
import { FlavorText, FlavorText$ } from "./flavortext";
import { Generation, Generation$ } from "./generation";
import { Genus, Genus$ } from "./genus";
import { GrowthRate, GrowthRate$ } from "./growthrate";
import { Name, Name$ } from "./name";
import { PalParkEncounterArea, PalParkEncounterArea$ } from "./palparkencounterarea";
import { PokemonColor, PokemonColor$ } from "./pokemoncolor";
import { PokemonHabitat, PokemonHabitat$ } from "./pokemonhabitat";
import { PokemonShape, PokemonShape$ } from "./pokemonshape";
import { PokemonSpeciesDexEntry, PokemonSpeciesDexEntry$ } from "./pokemonspeciesdexentry";
import { PokemonSpeciesVariety, PokemonSpeciesVariety$ } from "./pokemonspeciesvariety";
import { z } from "zod";

export type PokemonSpecies = {
    id?: number | undefined;
    name?: string | undefined;
    order?: number | undefined;
    genderRate?: number | undefined;
    captureRate?: number | undefined;
    baseHappiness?: number | undefined;
    isBaby?: boolean | undefined;
    hatchCounter?: number | undefined;
    hasGenderDifferences?: boolean | undefined;
    formsSwitchable?: boolean | undefined;
    growthRate?: GrowthRate | undefined;
    pokedexNumbers?: Array<PokemonSpeciesDexEntry> | undefined;
    eggGroups?: Array<EggGroup> | undefined;
    color?: PokemonColor | undefined;
    shape?: PokemonShape | undefined;
    evolvesFromSpecies?: PokemonSpecies | undefined;
    evolutionChain?: EvolutionChain | undefined;
    habitat?: PokemonHabitat | undefined;
    generation?: Generation | undefined;
    names?: Array<Name> | undefined;
    palParkEncounters?: Array<PalParkEncounterArea> | undefined;
    flavorTextEntries?: Array<FlavorText> | undefined;
    formDescriptions?: Array<Description> | undefined;
    genera?: Array<Genus> | undefined;
    varieties?: Array<PokemonSpeciesVariety> | undefined;
};

/** @internal */
export namespace PokemonSpecies$ {
    export type Inbound = {
        id?: number | undefined;
        name?: string | undefined;
        order?: number | undefined;
        gender_rate?: number | undefined;
        capture_rate?: number | undefined;
        base_happiness?: number | undefined;
        is_baby?: boolean | undefined;
        hatch_counter?: number | undefined;
        has_gender_differences?: boolean | undefined;
        forms_switchable?: boolean | undefined;
        growth_rate?: GrowthRate$.Inbound | undefined;
        pokedex_numbers?: Array<PokemonSpeciesDexEntry$.Inbound> | undefined;
        egg_groups?: Array<EggGroup$.Inbound> | undefined;
        color?: PokemonColor$.Inbound | undefined;
        shape?: PokemonShape$.Inbound | undefined;
        evolves_from_species?: PokemonSpecies$.Inbound | undefined;
        evolution_chain?: EvolutionChain$.Inbound | undefined;
        habitat?: PokemonHabitat$.Inbound | undefined;
        generation?: Generation$.Inbound | undefined;
        names?: Array<Name$.Inbound> | undefined;
        pal_park_encounters?: Array<PalParkEncounterArea$.Inbound> | undefined;
        flavor_text_entries?: Array<FlavorText$.Inbound> | undefined;
        form_descriptions?: Array<Description$.Inbound> | undefined;
        genera?: Array<Genus$.Inbound> | undefined;
        varieties?: Array<PokemonSpeciesVariety$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<PokemonSpecies, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            order: z.number().int().optional(),
            gender_rate: z.number().int().optional(),
            capture_rate: z.number().int().optional(),
            base_happiness: z.number().int().optional(),
            is_baby: z.boolean().optional(),
            hatch_counter: z.number().int().optional(),
            has_gender_differences: z.boolean().optional(),
            forms_switchable: z.boolean().optional(),
            growth_rate: GrowthRate$.inboundSchema.optional(),
            pokedex_numbers: z.array(PokemonSpeciesDexEntry$.inboundSchema).optional(),
            egg_groups: z.array(EggGroup$.inboundSchema).optional(),
            color: PokemonColor$.inboundSchema.optional(),
            shape: PokemonShape$.inboundSchema.optional(),
            evolves_from_species: z.lazy(() => PokemonSpecies$.inboundSchema).optional(),
            evolution_chain: EvolutionChain$.inboundSchema.optional(),
            habitat: PokemonHabitat$.inboundSchema.optional(),
            generation: Generation$.inboundSchema.optional(),
            names: z.array(Name$.inboundSchema).optional(),
            pal_park_encounters: z.array(PalParkEncounterArea$.inboundSchema).optional(),
            flavor_text_entries: z.array(FlavorText$.inboundSchema).optional(),
            form_descriptions: z.array(Description$.inboundSchema).optional(),
            genera: z.array(Genus$.inboundSchema).optional(),
            varieties: z.array(PokemonSpeciesVariety$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.order === undefined ? null : { order: v.order }),
                ...(v.gender_rate === undefined ? null : { genderRate: v.gender_rate }),
                ...(v.capture_rate === undefined ? null : { captureRate: v.capture_rate }),
                ...(v.base_happiness === undefined ? null : { baseHappiness: v.base_happiness }),
                ...(v.is_baby === undefined ? null : { isBaby: v.is_baby }),
                ...(v.hatch_counter === undefined ? null : { hatchCounter: v.hatch_counter }),
                ...(v.has_gender_differences === undefined
                    ? null
                    : { hasGenderDifferences: v.has_gender_differences }),
                ...(v.forms_switchable === undefined
                    ? null
                    : { formsSwitchable: v.forms_switchable }),
                ...(v.growth_rate === undefined ? null : { growthRate: v.growth_rate }),
                ...(v.pokedex_numbers === undefined ? null : { pokedexNumbers: v.pokedex_numbers }),
                ...(v.egg_groups === undefined ? null : { eggGroups: v.egg_groups }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.shape === undefined ? null : { shape: v.shape }),
                ...(v.evolves_from_species === undefined
                    ? null
                    : { evolvesFromSpecies: v.evolves_from_species }),
                ...(v.evolution_chain === undefined ? null : { evolutionChain: v.evolution_chain }),
                ...(v.habitat === undefined ? null : { habitat: v.habitat }),
                ...(v.generation === undefined ? null : { generation: v.generation }),
                ...(v.names === undefined ? null : { names: v.names }),
                ...(v.pal_park_encounters === undefined
                    ? null
                    : { palParkEncounters: v.pal_park_encounters }),
                ...(v.flavor_text_entries === undefined
                    ? null
                    : { flavorTextEntries: v.flavor_text_entries }),
                ...(v.form_descriptions === undefined
                    ? null
                    : { formDescriptions: v.form_descriptions }),
                ...(v.genera === undefined ? null : { genera: v.genera }),
                ...(v.varieties === undefined ? null : { varieties: v.varieties }),
            };
        });

    export type Outbound = {
        id?: number | undefined;
        name?: string | undefined;
        order?: number | undefined;
        gender_rate?: number | undefined;
        capture_rate?: number | undefined;
        base_happiness?: number | undefined;
        is_baby?: boolean | undefined;
        hatch_counter?: number | undefined;
        has_gender_differences?: boolean | undefined;
        forms_switchable?: boolean | undefined;
        growth_rate?: GrowthRate$.Outbound | undefined;
        pokedex_numbers?: Array<PokemonSpeciesDexEntry$.Outbound> | undefined;
        egg_groups?: Array<EggGroup$.Outbound> | undefined;
        color?: PokemonColor$.Outbound | undefined;
        shape?: PokemonShape$.Outbound | undefined;
        evolves_from_species?: PokemonSpecies$.Outbound | undefined;
        evolution_chain?: EvolutionChain$.Outbound | undefined;
        habitat?: PokemonHabitat$.Outbound | undefined;
        generation?: Generation$.Outbound | undefined;
        names?: Array<Name$.Outbound> | undefined;
        pal_park_encounters?: Array<PalParkEncounterArea$.Outbound> | undefined;
        flavor_text_entries?: Array<FlavorText$.Outbound> | undefined;
        form_descriptions?: Array<Description$.Outbound> | undefined;
        genera?: Array<Genus$.Outbound> | undefined;
        varieties?: Array<PokemonSpeciesVariety$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PokemonSpecies> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            order: z.number().int().optional(),
            genderRate: z.number().int().optional(),
            captureRate: z.number().int().optional(),
            baseHappiness: z.number().int().optional(),
            isBaby: z.boolean().optional(),
            hatchCounter: z.number().int().optional(),
            hasGenderDifferences: z.boolean().optional(),
            formsSwitchable: z.boolean().optional(),
            growthRate: GrowthRate$.outboundSchema.optional(),
            pokedexNumbers: z.array(PokemonSpeciesDexEntry$.outboundSchema).optional(),
            eggGroups: z.array(EggGroup$.outboundSchema).optional(),
            color: PokemonColor$.outboundSchema.optional(),
            shape: PokemonShape$.outboundSchema.optional(),
            evolvesFromSpecies: z.lazy(() => PokemonSpecies$.outboundSchema).optional(),
            evolutionChain: EvolutionChain$.outboundSchema.optional(),
            habitat: PokemonHabitat$.outboundSchema.optional(),
            generation: Generation$.outboundSchema.optional(),
            names: z.array(Name$.outboundSchema).optional(),
            palParkEncounters: z.array(PalParkEncounterArea$.outboundSchema).optional(),
            flavorTextEntries: z.array(FlavorText$.outboundSchema).optional(),
            formDescriptions: z.array(Description$.outboundSchema).optional(),
            genera: z.array(Genus$.outboundSchema).optional(),
            varieties: z.array(PokemonSpeciesVariety$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.order === undefined ? null : { order: v.order }),
                ...(v.genderRate === undefined ? null : { gender_rate: v.genderRate }),
                ...(v.captureRate === undefined ? null : { capture_rate: v.captureRate }),
                ...(v.baseHappiness === undefined ? null : { base_happiness: v.baseHappiness }),
                ...(v.isBaby === undefined ? null : { is_baby: v.isBaby }),
                ...(v.hatchCounter === undefined ? null : { hatch_counter: v.hatchCounter }),
                ...(v.hasGenderDifferences === undefined
                    ? null
                    : { has_gender_differences: v.hasGenderDifferences }),
                ...(v.formsSwitchable === undefined
                    ? null
                    : { forms_switchable: v.formsSwitchable }),
                ...(v.growthRate === undefined ? null : { growth_rate: v.growthRate }),
                ...(v.pokedexNumbers === undefined ? null : { pokedex_numbers: v.pokedexNumbers }),
                ...(v.eggGroups === undefined ? null : { egg_groups: v.eggGroups }),
                ...(v.color === undefined ? null : { color: v.color }),
                ...(v.shape === undefined ? null : { shape: v.shape }),
                ...(v.evolvesFromSpecies === undefined
                    ? null
                    : { evolves_from_species: v.evolvesFromSpecies }),
                ...(v.evolutionChain === undefined ? null : { evolution_chain: v.evolutionChain }),
                ...(v.habitat === undefined ? null : { habitat: v.habitat }),
                ...(v.generation === undefined ? null : { generation: v.generation }),
                ...(v.names === undefined ? null : { names: v.names }),
                ...(v.palParkEncounters === undefined
                    ? null
                    : { pal_park_encounters: v.palParkEncounters }),
                ...(v.flavorTextEntries === undefined
                    ? null
                    : { flavor_text_entries: v.flavorTextEntries }),
                ...(v.formDescriptions === undefined
                    ? null
                    : { form_descriptions: v.formDescriptions }),
                ...(v.genera === undefined ? null : { genera: v.genera }),
                ...(v.varieties === undefined ? null : { varieties: v.varieties }),
            };
        });
}
