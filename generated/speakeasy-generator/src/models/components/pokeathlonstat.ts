/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Name, Name$ } from "./name";
import {
    NaturePokeathlonStatAffectSets,
    NaturePokeathlonStatAffectSets$,
} from "./naturepokeathlonstataffectsets";
import { z } from "zod";

/**
 * A detail of natures which affect this Pokéathlon stat positively or negatively
 */
export type AffectingNatures = {
    /**
     * A list of natures that positively affect this Pokéathlon stat
     */
    increase?: Array<NaturePokeathlonStatAffectSets> | undefined;
    /**
     * A list of natures that negatively affect this Pokéathlon stat
     */
    decrease?: Array<NaturePokeathlonStatAffectSets> | undefined;
};

export type PokeathlonStat = {
    /**
     * The identifier for this Pokéathlon stat resource
     */
    id: number;
    /**
     * The name for this Pokéathlon stat resource
     */
    name: string;
    /**
     * The name of this Pokéathlon stat listed in different languages
     */
    names: Array<Name>;
    /**
     * A detail of natures which affect this Pokéathlon stat positively or negatively
     */
    affectingNatures: AffectingNatures;
};

/** @internal */
export namespace AffectingNatures$ {
    export type Inbound = {
        increase?: Array<NaturePokeathlonStatAffectSets$.Inbound> | undefined;
        decrease?: Array<NaturePokeathlonStatAffectSets$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<AffectingNatures, z.ZodTypeDef, Inbound> = z
        .object({
            increase: z.array(NaturePokeathlonStatAffectSets$.inboundSchema).optional(),
            decrease: z.array(NaturePokeathlonStatAffectSets$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.increase === undefined ? null : { increase: v.increase }),
                ...(v.decrease === undefined ? null : { decrease: v.decrease }),
            };
        });

    export type Outbound = {
        increase?: Array<NaturePokeathlonStatAffectSets$.Outbound> | undefined;
        decrease?: Array<NaturePokeathlonStatAffectSets$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AffectingNatures> = z
        .object({
            increase: z.array(NaturePokeathlonStatAffectSets$.outboundSchema).optional(),
            decrease: z.array(NaturePokeathlonStatAffectSets$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.increase === undefined ? null : { increase: v.increase }),
                ...(v.decrease === undefined ? null : { decrease: v.decrease }),
            };
        });
}

/** @internal */
export namespace PokeathlonStat$ {
    export type Inbound = {
        id: number;
        name: string;
        names: Array<Name$.Inbound>;
        affecting_natures: AffectingNatures$.Inbound;
    };

    export const inboundSchema: z.ZodType<PokeathlonStat, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int(),
            name: z.string(),
            names: z.array(Name$.inboundSchema),
            affecting_natures: z.lazy(() => AffectingNatures$.inboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                names: v.names,
                affectingNatures: v.affecting_natures,
            };
        });

    export type Outbound = {
        id: number;
        name: string;
        names: Array<Name$.Outbound>;
        affecting_natures: AffectingNatures$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PokeathlonStat> = z
        .object({
            id: z.number().int(),
            name: z.string(),
            names: z.array(Name$.outboundSchema),
            affectingNatures: z.lazy(() => AffectingNatures$.outboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                names: v.names,
                affecting_natures: v.affectingNatures,
            };
        });
}
