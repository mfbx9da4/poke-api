/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NamedAPIResource, NamedAPIResource$ } from "./namedapiresource";
import { z } from "zod";

export type VersionGroupDetails = {
    /**
     * The minimum level to learn the move
     */
    levelLearnedAt: number;
    moveLearnMethod: NamedAPIResource;
    versionGroup: NamedAPIResource;
};

export type PokemonMove = {
    move?: NamedAPIResource | undefined;
    /**
     * A list of details showing how the Pok√©mon can learn the move
     *
     * @remarks
     *
     */
    versionGroupDetails?: Array<VersionGroupDetails> | undefined;
};

/** @internal */
export namespace VersionGroupDetails$ {
    export type Inbound = {
        level_learned_at: number;
        move_learn_method: NamedAPIResource$.Inbound;
        version_group: NamedAPIResource$.Inbound;
    };

    export const inboundSchema: z.ZodType<VersionGroupDetails, z.ZodTypeDef, Inbound> = z
        .object({
            level_learned_at: z.number().int(),
            move_learn_method: NamedAPIResource$.inboundSchema,
            version_group: NamedAPIResource$.inboundSchema,
        })
        .transform((v) => {
            return {
                levelLearnedAt: v.level_learned_at,
                moveLearnMethod: v.move_learn_method,
                versionGroup: v.version_group,
            };
        });

    export type Outbound = {
        level_learned_at: number;
        move_learn_method: NamedAPIResource$.Outbound;
        version_group: NamedAPIResource$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VersionGroupDetails> = z
        .object({
            levelLearnedAt: z.number().int(),
            moveLearnMethod: NamedAPIResource$.outboundSchema,
            versionGroup: NamedAPIResource$.outboundSchema,
        })
        .transform((v) => {
            return {
                level_learned_at: v.levelLearnedAt,
                move_learn_method: v.moveLearnMethod,
                version_group: v.versionGroup,
            };
        });
}

/** @internal */
export namespace PokemonMove$ {
    export type Inbound = {
        move?: NamedAPIResource$.Inbound | undefined;
        version_group_details?: Array<VersionGroupDetails$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<PokemonMove, z.ZodTypeDef, Inbound> = z
        .object({
            move: NamedAPIResource$.inboundSchema.optional(),
            version_group_details: z
                .array(z.lazy(() => VersionGroupDetails$.inboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.move === undefined ? null : { move: v.move }),
                ...(v.version_group_details === undefined
                    ? null
                    : { versionGroupDetails: v.version_group_details }),
            };
        });

    export type Outbound = {
        move?: NamedAPIResource$.Outbound | undefined;
        version_group_details?: Array<VersionGroupDetails$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PokemonMove> = z
        .object({
            move: NamedAPIResource$.outboundSchema.optional(),
            versionGroupDetails: z
                .array(z.lazy(() => VersionGroupDetails$.outboundSchema))
                .optional(),
        })
        .transform((v) => {
            return {
                ...(v.move === undefined ? null : { move: v.move }),
                ...(v.versionGroupDetails === undefined
                    ? null
                    : { version_group_details: v.versionGroupDetails }),
            };
        });
}
