/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Name, Name$ } from "./name";
import { NamedAPIResource, NamedAPIResource$ } from "./namedapiresource";
import { z } from "zod";

export type EggGroup = {
    /**
     * The identifier for this egg group resource
     */
    id: number;
    /**
     * The name for this egg group resource
     */
    name: string;
    /**
     * The name of this egg group listed in different languages
     */
    names: Array<Name>;
    /**
     * A list of all Pokemon species that are members of this egg group
     */
    pokemonSpecies: Array<NamedAPIResource>;
};

/** @internal */
export namespace EggGroup$ {
    export type Inbound = {
        id: number;
        name: string;
        names: Array<Name$.Inbound>;
        pokemon_species: Array<NamedAPIResource$.Inbound>;
    };

    export const inboundSchema: z.ZodType<EggGroup, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int(),
            name: z.string(),
            names: z.array(Name$.inboundSchema),
            pokemon_species: z.array(NamedAPIResource$.inboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                names: v.names,
                pokemonSpecies: v.pokemon_species,
            };
        });

    export type Outbound = {
        id: number;
        name: string;
        names: Array<Name$.Outbound>;
        pokemon_species: Array<NamedAPIResource$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EggGroup> = z
        .object({
            id: z.number().int(),
            name: z.string(),
            names: z.array(Name$.outboundSchema),
            pokemonSpecies: z.array(NamedAPIResource$.outboundSchema),
        })
        .transform((v) => {
            return {
                id: v.id,
                name: v.name,
                names: v.names,
                pokemon_species: v.pokemonSpecies,
            };
        });
}
