/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FlavorText, FlavorText$ } from "./flavortext";
import { ItemAttribute, ItemAttribute$ } from "./itemattribute";
import { ItemCategory, ItemCategory$ } from "./itemcategory";
import { ItemFlingEffect, ItemFlingEffect$ } from "./itemflingeffect";
import { VerboseEffect, VerboseEffect$ } from "./verboseeffect";
import { z } from "zod";

export type Item = {
    id?: number | undefined;
    name?: string | undefined;
    cost?: number | undefined;
    flingPower?: number | undefined;
    effectEntries?: Array<VerboseEffect> | undefined;
    flavorTextEntries?: Array<FlavorText> | undefined;
    attributes?: Array<ItemAttribute> | undefined;
    category?: ItemCategory | undefined;
    flingEffect?: ItemFlingEffect | undefined;
};

/** @internal */
export namespace Item$ {
    export type Inbound = {
        id?: number | undefined;
        name?: string | undefined;
        cost?: number | undefined;
        fling_power?: number | undefined;
        effect_entries?: Array<VerboseEffect$.Inbound> | undefined;
        flavor_text_entries?: Array<FlavorText$.Inbound> | undefined;
        attributes?: Array<ItemAttribute$.Inbound> | undefined;
        category?: ItemCategory$.Inbound | undefined;
        fling_effect?: ItemFlingEffect$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<Item, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            cost: z.number().int().optional(),
            fling_power: z.number().int().optional(),
            effect_entries: z.array(VerboseEffect$.inboundSchema).optional(),
            flavor_text_entries: z.array(FlavorText$.inboundSchema).optional(),
            attributes: z.array(ItemAttribute$.inboundSchema).optional(),
            category: ItemCategory$.inboundSchema.optional(),
            fling_effect: ItemFlingEffect$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.cost === undefined ? null : { cost: v.cost }),
                ...(v.fling_power === undefined ? null : { flingPower: v.fling_power }),
                ...(v.effect_entries === undefined ? null : { effectEntries: v.effect_entries }),
                ...(v.flavor_text_entries === undefined
                    ? null
                    : { flavorTextEntries: v.flavor_text_entries }),
                ...(v.attributes === undefined ? null : { attributes: v.attributes }),
                ...(v.category === undefined ? null : { category: v.category }),
                ...(v.fling_effect === undefined ? null : { flingEffect: v.fling_effect }),
            };
        });

    export type Outbound = {
        id?: number | undefined;
        name?: string | undefined;
        cost?: number | undefined;
        fling_power?: number | undefined;
        effect_entries?: Array<VerboseEffect$.Outbound> | undefined;
        flavor_text_entries?: Array<FlavorText$.Outbound> | undefined;
        attributes?: Array<ItemAttribute$.Outbound> | undefined;
        category?: ItemCategory$.Outbound | undefined;
        fling_effect?: ItemFlingEffect$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Item> = z
        .object({
            id: z.number().int().optional(),
            name: z.string().optional(),
            cost: z.number().int().optional(),
            flingPower: z.number().int().optional(),
            effectEntries: z.array(VerboseEffect$.outboundSchema).optional(),
            flavorTextEntries: z.array(FlavorText$.outboundSchema).optional(),
            attributes: z.array(ItemAttribute$.outboundSchema).optional(),
            category: ItemCategory$.outboundSchema.optional(),
            flingEffect: ItemFlingEffect$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.name === undefined ? null : { name: v.name }),
                ...(v.cost === undefined ? null : { cost: v.cost }),
                ...(v.flingPower === undefined ? null : { fling_power: v.flingPower }),
                ...(v.effectEntries === undefined ? null : { effect_entries: v.effectEntries }),
                ...(v.flavorTextEntries === undefined
                    ? null
                    : { flavor_text_entries: v.flavorTextEntries }),
                ...(v.attributes === undefined ? null : { attributes: v.attributes }),
                ...(v.category === undefined ? null : { category: v.category }),
                ...(v.flingEffect === undefined ? null : { fling_effect: v.flingEffect }),
            };
        });
}
