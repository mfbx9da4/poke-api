/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NamedAPIResource, NamedAPIResource$ } from "./namedapiresource";
import { z } from "zod";

export type MoveStatChange = {
    /**
     * The amount of change to the referenced stat.
     */
    change: number;
    stat: NamedAPIResource;
};

/** @internal */
export namespace MoveStatChange$ {
    export type Inbound = {
        change: number;
        stat: NamedAPIResource$.Inbound;
    };

    export const inboundSchema: z.ZodType<MoveStatChange, z.ZodTypeDef, Inbound> = z
        .object({
            change: z.number().int(),
            stat: NamedAPIResource$.inboundSchema,
        })
        .transform((v) => {
            return {
                change: v.change,
                stat: v.stat,
            };
        });

    export type Outbound = {
        change: number;
        stat: NamedAPIResource$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MoveStatChange> = z
        .object({
            change: z.number().int(),
            stat: NamedAPIResource$.outboundSchema,
        })
        .transform((v) => {
            return {
                change: v.change,
                stat: v.stat,
            };
        });
}
