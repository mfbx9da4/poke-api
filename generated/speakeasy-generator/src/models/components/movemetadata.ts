/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { NamedAPIResource, NamedAPIResource$ } from "./namedapiresource";
import { z } from "zod";

export type MoveMetaData = {
    ailment: NamedAPIResource;
    category: NamedAPIResource;
    /**
     * The minimum number of times this move hits. Null if it always only hits once.
     */
    minHits?: number | null | undefined;
    /**
     * The maximum number of times this move hits. Null if it always only hits once.
     */
    maxHits?: number | null | undefined;
    /**
     * The minimum number of turns this move continues to take effect. Null if it always only lasts one turn.
     */
    minTurns?: number | null | undefined;
    /**
     * The maximum number of turns this move continues to take effect. Null if it always only lasts one turn.
     */
    maxTurns?: number | null | undefined;
    /**
     * The amount of hp gained by the attacking Pokemon when it uses this move.
     */
    drain?: number | null | undefined;
    /**
     * The amount of hp gained by the target Pokemon when it receives this move.
     */
    healing?: number | null | undefined;
    /**
     * Critical hit rate bonus.
     */
    critRate?: number | null | undefined;
    /**
     * The chance of the target being inflicted with the status condition ailment.
     */
    ailmentChance?: number | null | undefined;
    /**
     * The chance of the target flinching when hit by this move.
     */
    flinchChance?: number | null | undefined;
    /**
     * The chance of the attacking Pokemon lowering the target's stat.
     */
    statChance?: number | null | undefined;
};

/** @internal */
export namespace MoveMetaData$ {
    export type Inbound = {
        ailment: NamedAPIResource$.Inbound;
        category: NamedAPIResource$.Inbound;
        min_hits?: number | null | undefined;
        max_hits?: number | null | undefined;
        min_turns?: number | null | undefined;
        max_turns?: number | null | undefined;
        drain?: number | null | undefined;
        healing?: number | null | undefined;
        crit_rate?: number | null | undefined;
        ailment_chance?: number | null | undefined;
        flinch_chance?: number | null | undefined;
        stat_chance?: number | null | undefined;
    };

    export const inboundSchema: z.ZodType<MoveMetaData, z.ZodTypeDef, Inbound> = z
        .object({
            ailment: NamedAPIResource$.inboundSchema,
            category: NamedAPIResource$.inboundSchema,
            min_hits: z.number().int().nullable().optional(),
            max_hits: z.number().int().nullable().optional(),
            min_turns: z.number().int().nullable().optional(),
            max_turns: z.number().int().nullable().optional(),
            drain: z.number().int().nullable().optional(),
            healing: z.number().int().nullable().optional(),
            crit_rate: z.number().int().nullable().optional(),
            ailment_chance: z.number().int().nullable().optional(),
            flinch_chance: z.number().int().nullable().optional(),
            stat_chance: z.number().int().nullable().optional(),
        })
        .transform((v) => {
            return {
                ailment: v.ailment,
                category: v.category,
                ...(v.min_hits === undefined ? null : { minHits: v.min_hits }),
                ...(v.max_hits === undefined ? null : { maxHits: v.max_hits }),
                ...(v.min_turns === undefined ? null : { minTurns: v.min_turns }),
                ...(v.max_turns === undefined ? null : { maxTurns: v.max_turns }),
                ...(v.drain === undefined ? null : { drain: v.drain }),
                ...(v.healing === undefined ? null : { healing: v.healing }),
                ...(v.crit_rate === undefined ? null : { critRate: v.crit_rate }),
                ...(v.ailment_chance === undefined ? null : { ailmentChance: v.ailment_chance }),
                ...(v.flinch_chance === undefined ? null : { flinchChance: v.flinch_chance }),
                ...(v.stat_chance === undefined ? null : { statChance: v.stat_chance }),
            };
        });

    export type Outbound = {
        ailment: NamedAPIResource$.Outbound;
        category: NamedAPIResource$.Outbound;
        min_hits?: number | null | undefined;
        max_hits?: number | null | undefined;
        min_turns?: number | null | undefined;
        max_turns?: number | null | undefined;
        drain?: number | null | undefined;
        healing?: number | null | undefined;
        crit_rate?: number | null | undefined;
        ailment_chance?: number | null | undefined;
        flinch_chance?: number | null | undefined;
        stat_chance?: number | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MoveMetaData> = z
        .object({
            ailment: NamedAPIResource$.outboundSchema,
            category: NamedAPIResource$.outboundSchema,
            minHits: z.number().int().nullable().optional(),
            maxHits: z.number().int().nullable().optional(),
            minTurns: z.number().int().nullable().optional(),
            maxTurns: z.number().int().nullable().optional(),
            drain: z.number().int().nullable().optional(),
            healing: z.number().int().nullable().optional(),
            critRate: z.number().int().nullable().optional(),
            ailmentChance: z.number().int().nullable().optional(),
            flinchChance: z.number().int().nullable().optional(),
            statChance: z.number().int().nullable().optional(),
        })
        .transform((v) => {
            return {
                ailment: v.ailment,
                category: v.category,
                ...(v.minHits === undefined ? null : { min_hits: v.minHits }),
                ...(v.maxHits === undefined ? null : { max_hits: v.maxHits }),
                ...(v.minTurns === undefined ? null : { min_turns: v.minTurns }),
                ...(v.maxTurns === undefined ? null : { max_turns: v.maxTurns }),
                ...(v.drain === undefined ? null : { drain: v.drain }),
                ...(v.healing === undefined ? null : { healing: v.healing }),
                ...(v.critRate === undefined ? null : { crit_rate: v.critRate }),
                ...(v.ailmentChance === undefined ? null : { ailment_chance: v.ailmentChance }),
                ...(v.flinchChance === undefined ? null : { flinch_chance: v.flinchChance }),
                ...(v.statChance === undefined ? null : { stat_chance: v.statChance }),
            };
        });
}
