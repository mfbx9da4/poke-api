/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PokeathlonStatName, PokeathlonStatName$ } from "./pokeathlonstatname";
import { z } from "zod";

export type NatureStatChange = {
    maxChange?: number | undefined;
    pokeathlonStat?: PokeathlonStatName | undefined;
};

/** @internal */
export namespace NatureStatChange$ {
    export type Inbound = {
        max_change?: number | undefined;
        pokeathlon_stat?: PokeathlonStatName$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<NatureStatChange, z.ZodTypeDef, Inbound> = z
        .object({
            max_change: z.number().int().optional(),
            pokeathlon_stat: PokeathlonStatName$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.max_change === undefined ? null : { maxChange: v.max_change }),
                ...(v.pokeathlon_stat === undefined ? null : { pokeathlonStat: v.pokeathlon_stat }),
            };
        });

    export type Outbound = {
        max_change?: number | undefined;
        pokeathlon_stat?: PokeathlonStatName$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, NatureStatChange> = z
        .object({
            maxChange: z.number().int().optional(),
            pokeathlonStat: PokeathlonStatName$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.maxChange === undefined ? null : { max_change: v.maxChange }),
                ...(v.pokeathlonStat === undefined ? null : { pokeathlon_stat: v.pokeathlonStat }),
            };
        });
}
