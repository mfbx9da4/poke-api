/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { z } from "zod";

export type VerboseEffect = {
    /**
     * The localized effect text for an API resource in a specific language.
     */
    effect?: string | undefined;
};

/** @internal */
export namespace VerboseEffect$ {
    export type Inbound = {
        effect?: string | undefined;
    };

    export const inboundSchema: z.ZodType<VerboseEffect, z.ZodTypeDef, Inbound> = z
        .object({
            effect: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.effect === undefined ? null : { effect: v.effect }),
            };
        });

    export type Outbound = {
        effect?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VerboseEffect> = z
        .object({
            effect: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.effect === undefined ? null : { effect: v.effect }),
            };
        });
}
