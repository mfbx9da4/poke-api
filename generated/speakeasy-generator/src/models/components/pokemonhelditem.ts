/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Item, Item$ } from "./item";
import { Version, Version$ } from "./version";
import { z } from "zod";

export type VersionDetails = {
    rarity?: number | undefined;
    version?: Version | undefined;
};

export type PokemonHeldItem = {
    item?: Item | undefined;
    versionDetails?: Array<VersionDetails> | undefined;
};

/** @internal */
export namespace VersionDetails$ {
    export type Inbound = {
        rarity?: number | undefined;
        version?: Version$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<VersionDetails, z.ZodTypeDef, Inbound> = z
        .object({
            rarity: z.number().int().optional(),
            version: Version$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.rarity === undefined ? null : { rarity: v.rarity }),
                ...(v.version === undefined ? null : { version: v.version }),
            };
        });

    export type Outbound = {
        rarity?: number | undefined;
        version?: Version$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, VersionDetails> = z
        .object({
            rarity: z.number().int().optional(),
            version: Version$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.rarity === undefined ? null : { rarity: v.rarity }),
                ...(v.version === undefined ? null : { version: v.version }),
            };
        });
}

/** @internal */
export namespace PokemonHeldItem$ {
    export type Inbound = {
        item?: Item$.Inbound | undefined;
        version_details?: Array<VersionDetails$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<PokemonHeldItem, z.ZodTypeDef, Inbound> = z
        .object({
            item: Item$.inboundSchema.optional(),
            version_details: z.array(z.lazy(() => VersionDetails$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.item === undefined ? null : { item: v.item }),
                ...(v.version_details === undefined ? null : { versionDetails: v.version_details }),
            };
        });

    export type Outbound = {
        item?: Item$.Outbound | undefined;
        version_details?: Array<VersionDetails$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PokemonHeldItem> = z
        .object({
            item: Item$.outboundSchema.optional(),
            versionDetails: z.array(z.lazy(() => VersionDetails$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.item === undefined ? null : { item: v.item }),
                ...(v.versionDetails === undefined ? null : { version_details: v.versionDetails }),
            };
        });
}
