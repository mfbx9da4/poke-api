/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 20220523
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { EvolutionChainChainEvolutionDetailsInnerItem } from '../models/EvolutionChainChainEvolutionDetailsInnerItem';
import { EvolutionChainChainEvolutionDetailsInnerKnownMove } from '../models/EvolutionChainChainEvolutionDetailsInnerKnownMove';
import { EvolutionChainChainEvolutionDetailsInnerKnownMoveType } from '../models/EvolutionChainChainEvolutionDetailsInnerKnownMoveType';
import { EvolutionChainChainEvolutionDetailsInnerLocation } from '../models/EvolutionChainChainEvolutionDetailsInnerLocation';
import { EvolutionChainChainEvolutionDetailsInnerPartySpecies } from '../models/EvolutionChainChainEvolutionDetailsInnerPartySpecies';
import { EvolutionTrigger } from '../models/EvolutionTrigger';
import { HttpFile } from '../http/http';

export class EvolutionChainChainEvolutionDetailsInner {
    'item'?: EvolutionChainChainEvolutionDetailsInnerItem;
    'trigger'?: EvolutionTrigger;
    /**
    * The required female gender of the evolving Pokémon species. Must be either 1 or 2, or null if the Pokémon species has no gender or the gender is fixed.
    */
    'gender'?: number | null;
    'heldItem'?: EvolutionChainChainEvolutionDetailsInnerItem;
    'knownMove'?: EvolutionChainChainEvolutionDetailsInnerKnownMove;
    'knownMoveType'?: EvolutionChainChainEvolutionDetailsInnerKnownMoveType;
    'location'?: EvolutionChainChainEvolutionDetailsInnerLocation;
    /**
    * The minimum required level of the evolving Pokémon species
    */
    'minLevel'?: number | null;
    /**
    * The minimum required happiness of the evolving Pokémon species
    */
    'minHappiness'?: number | null;
    /**
    * The minimum required beauty of the evolving Pokémon species
    */
    'minBeauty'?: number | null;
    /**
    * The minimum required affection of the evolving Pokémon species
    */
    'minAffection'?: number | null;
    /**
    * Whether or not it must be raining in the overworld to evolve into this Pokémon species
    */
    'needsOverworldRain'?: boolean;
    'partySpecies'?: EvolutionChainChainEvolutionDetailsInnerPartySpecies;
    'partyType'?: EvolutionChainChainEvolutionDetailsInnerKnownMoveType;
    /**
    * The required relation between the Pokémon\'s Attack and Defense stats. 1 means Attack > Defense, 0 means Attack = Defense, and -1 means Attack < Defense.
    */
    'relativePhysicalStats'?: number | null;
    /**
    * The required time of day. Day or night.
    */
    'timeOfDay'?: EvolutionChainChainEvolutionDetailsInnerTimeOfDayEnum;
    'tradeSpecies'?: EvolutionChainChainEvolutionDetailsInnerPartySpecies;
    /**
    * Whether or not the 3DS needs to be turned upside-down as this Pokémon levels up.
    */
    'turnUpsideDown'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "item",
            "baseName": "item",
            "type": "EvolutionChainChainEvolutionDetailsInnerItem",
            "format": ""
        },
        {
            "name": "trigger",
            "baseName": "trigger",
            "type": "EvolutionTrigger",
            "format": ""
        },
        {
            "name": "gender",
            "baseName": "gender",
            "type": "number",
            "format": ""
        },
        {
            "name": "heldItem",
            "baseName": "held_item",
            "type": "EvolutionChainChainEvolutionDetailsInnerItem",
            "format": ""
        },
        {
            "name": "knownMove",
            "baseName": "known_move",
            "type": "EvolutionChainChainEvolutionDetailsInnerKnownMove",
            "format": ""
        },
        {
            "name": "knownMoveType",
            "baseName": "known_move_type",
            "type": "EvolutionChainChainEvolutionDetailsInnerKnownMoveType",
            "format": ""
        },
        {
            "name": "location",
            "baseName": "location",
            "type": "EvolutionChainChainEvolutionDetailsInnerLocation",
            "format": ""
        },
        {
            "name": "minLevel",
            "baseName": "min_level",
            "type": "number",
            "format": ""
        },
        {
            "name": "minHappiness",
            "baseName": "min_happiness",
            "type": "number",
            "format": ""
        },
        {
            "name": "minBeauty",
            "baseName": "min_beauty",
            "type": "number",
            "format": ""
        },
        {
            "name": "minAffection",
            "baseName": "min_affection",
            "type": "number",
            "format": ""
        },
        {
            "name": "needsOverworldRain",
            "baseName": "needs_overworld_rain",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "partySpecies",
            "baseName": "party_species",
            "type": "EvolutionChainChainEvolutionDetailsInnerPartySpecies",
            "format": ""
        },
        {
            "name": "partyType",
            "baseName": "party_type",
            "type": "EvolutionChainChainEvolutionDetailsInnerKnownMoveType",
            "format": ""
        },
        {
            "name": "relativePhysicalStats",
            "baseName": "relative_physical_stats",
            "type": "number",
            "format": ""
        },
        {
            "name": "timeOfDay",
            "baseName": "time_of_day",
            "type": "EvolutionChainChainEvolutionDetailsInnerTimeOfDayEnum",
            "format": ""
        },
        {
            "name": "tradeSpecies",
            "baseName": "trade_species",
            "type": "EvolutionChainChainEvolutionDetailsInnerPartySpecies",
            "format": ""
        },
        {
            "name": "turnUpsideDown",
            "baseName": "turn_upside_down",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return EvolutionChainChainEvolutionDetailsInner.attributeTypeMap;
    }

    public constructor() {
    }
}


export enum EvolutionChainChainEvolutionDetailsInnerTimeOfDayEnum {
    Day = 'day',
    Night = 'night'
}

